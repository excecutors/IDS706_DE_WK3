name: CI

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies (Makefile venv)
        run: |
          make install
          . .venv/bin/activate
          python --version
          pip list

      - name: Lint (flake8)
        run: .venv/bin/flake8 *.py

      - name: Formatting check (black --check)
        run: .venv/bin/black --check *.py

      - name: Run tests (pytest + coverage)
        run: .venv/bin/pytest -vv --maxfail=1 --cov=.

  # Optional: ensure Docker image builds (no run)
  docker-build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t ids706-wk3 .